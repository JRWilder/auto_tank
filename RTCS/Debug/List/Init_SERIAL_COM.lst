###############################################################################
#
# IAR C/C++ Compiler V7.12.1.987/W32 for MSP430           16/Jun/2020  19:26:10
# Copyright 1996-2018 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 7.12
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        C:\Users\Johnathan\OneDrive - North Carolina State
#        University\auto_tank\RTCS\src\Init_SERIAL_COM.c
#    Command line  =  
#        -f C:\Users\JOHNAT~1\AppData\Local\Temp\EW7C4F.tmp
#        ("C:\Users\Johnathan\OneDrive - North Carolina State
#        University\auto_tank\RTCS\src\Init_SERIAL_COM.c" -lC
#        "C:\Users\Johnathan\OneDrive - North Carolina State
#        University\auto_tank\RTCS\Debug\List" -o "C:\Users\Johnathan\OneDrive
#        - North Carolina State University\auto_tank\RTCS\Debug\Obj" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR2355__ -e --double=32 --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.0\430\lib\dlib\dl430xlsfn.h" -I
#        ./\ -I "C:\Users\Johnathan\OneDrive - North Carolina State
#        University\auto_tank\RTCS\include\" -I "C:\Users\Johnathan\OneDrive -
#        North Carolina State University\auto_tank\RTCS\src\" --core=430X
#        --data_model=small -On --multiplier=32 --hw_workaround=CPU40
#        --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        C:\Users\Johnathan\OneDrive - North Carolina State
#        University\auto_tank\RTCS\Debug\List\Init_SERIAL_COM.lst
#    Object file   =  
#        C:\Users\Johnathan\OneDrive - North Carolina State
#        University\auto_tank\RTCS\Debug\Obj\Init_SERIAL_COM.r43
#
###############################################################################

C:\Users\Johnathan\OneDrive - North Carolina State University\auto_tank\RTCS\src\Init_SERIAL_COM.c
      1          //******************************************************************************
      2          // File Name: Init_SERIAL_COM.c
      3          // Description: This file contains the Initialization for serial ports UCA0
      4          // and UCA1.
      5          // Author: Johnathan Wilder
      6          // Date: May 2019
      7          // Compiler: Built with IAR Embedded Workbench Version: V4.10A/W32 (7.11.2)
      8          //******************************************************************************
      9          
     10          #include "msp430.h"

   \                                 In  segment DATA16_AN, at 0x500
   \   union <unnamed> _A_UCA0CTLW0_L
   \                     _A_UCA0CTLW0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x506
   \   union <unnamed> _A_UCA0BRW_L
   \                     _A_UCA0BRW_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x508
   \   union <unnamed> _A_UCA0MCTLW_L
   \                     _A_UCA0MCTLW_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x51a
   \   union <unnamed> _A_UCA0IE_L
   \                     _A_UCA0IE_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x580
   \   union <unnamed> _A_UCA1CTLW0_L
   \                     _A_UCA1CTLW0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x586
   \   union <unnamed> _A_UCA1BRW_L
   \                     _A_UCA1BRW_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x588
   \   union <unnamed> _A_UCA1MCTLW_L
   \                     _A_UCA1MCTLW_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x59a
   \   union <unnamed> _A_UCA1IE_L
   \                     _A_UCA1IE_L:
   \   000000                DS8 2
     11          #include "Functions.h"
     12          #include "Macros.h"
     13          
     14          ///////////////////////// Serial Interrupts /////////////////////////
     15          //UCA0

   \                                 In  segment DATA16_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     16          volatile char IOT_Rx[SIXTY_FOUR];
   \                     IOT_Rx:
   \   000000                DS8 192

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     17          unsigned int IOT_Rx_index = ZERO;
   \                     IOT_Rx_index:
   \   000000                DS8 2

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     18          char IOT_Rx_rdy = LOW;
   \                     IOT_Rx_rdy:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for IOT_Rx_rdy>`

   \                                 In  segment DATA16_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     19          volatile char IOT_Tx[THIRTY_TWO];
   \                     IOT_Tx:
   \   000000                DS8 26

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     20          unsigned int IOT_Tx_index = ZERO;
   \                     IOT_Tx_index:
   \   000000                DS8 2

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     21          char IOT_Tx_rdy = LOW;
   \                     IOT_Tx_rdy:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for IOT_Tx_rdy>`

   \                                 In  segment DATA16_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     22          char SSid[TEN];
   \                     SSid:
   \   000000                DS8 10

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     23          unsigned int SSID_index = ZERO;
   \                     SSID_index:
   \   000000                DS8 2

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     24          char SSID_rdy = LOW;
   \                     SSID_rdy:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for SSID_rdy>`

   \                                 In  segment DATA16_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     25          char IP_addr[FOURTEEN];
   \                     IP_addr:
   \   000000                DS8 14

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     26          unsigned int IP_ADDR_index = ZERO;
   \                     IP_ADDR_index:
   \   000000                DS8 2

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     27          char IP_ADDR_rdy = LOW;
   \                     IP_ADDR_rdy:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for IP_ADDR_rdy>`

   \                                 In  segment DATA16_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     28          volatile char command[THIRTY_TWO];
   \                     command:
   \   000000                DS8 26

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     29          unsigned int command_index = ZERO;
   \                     command_index:
   \   000000                DS8 2

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     30          char command_rdy = LOW;
   \                     command_rdy:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for command_rdy>`

   \                                 In  segment DATA16_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     31          char diss_event[FOURTEEN];
   \                     diss_event:
   \   000000                DS8 14

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     32          unsigned int diss_index = ZERO;
   \                     diss_index:
   \   000000                DS8 2

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     33          char diss_event_rdy = LOW;
   \                     diss_event_rdy:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for diss_event_rdy>`

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     34          char AT_sent = LOW;
   \                     AT_sent:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for AT_sent>`

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     35          char WSYN_sent = LOW;
   \                     WSYN_sent:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for WSYN_sent>`

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     36          char PING_sent = LOW;
   \                     PING_sent:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for PING_sent>`

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     37          char NSTC_sent = LOW;
   \                     NSTC_sent:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for NSTC_sent>`

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     38          char NSTAT_sent = LOW;
   \                     NSTAT_sent:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for NSTAT_sent>`

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     39          unsigned int IOT_baud_rate;
   \                     IOT_baud_rate:
   \   000000                DS8 2
     40          //UCA1

   \                                 In  segment DATA16_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     41          volatile char USB_Rx[THIRTY_TWO];
   \                     USB_Rx:
   \   000000                DS8 26

   \                                 In  segment DATA16_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     42          volatile char USB_Tx[THIRTY_TWO];
   \                     USB_Tx:
   \   000000                DS8 26

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     43          unsigned int USB_Rx_index = ZERO;
   \                     USB_Rx_index:
   \   000000                DS8 2

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     44          unsigned int USB_Tx_index = ZERO;
   \                     USB_Tx_index:
   \   000000                DS8 2

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     45          char USB_Rx_rdy = LOW;
   \                     USB_Rx_rdy:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for USB_Rx_rdy>`

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     46          char USB_Tx_rdy = LOW;
   \                     USB_Tx_rdy:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for USB_Tx_rdy>`

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     47          unsigned int USB_baud_rate;
   \                     USB_baud_rate:
   \   000000                DS8 2
     48          

   \                                 In  segment CODE, align 2
     49          void Init_Serial(void){
   \                     Init_Serial:
     50          	Init_Serial_UCA0();
   \   000000   ........     CALLA   #Init_Serial_UCA0
     51          	Init_Serial_UCA1();
   \   000004   ........     BRA     #Init_Serial_UCA1
     52          }
     53          

   \                                 In  segment CODE, align 2
     54          void Init_Serial_UCA0(void){
   \                     Init_Serial_UCA0:
     55          	for(unsigned int i=ZERO; i<SIXTY_FOUR; i++){
   \   000000   0F43         MOV.W   #0x0, R15
   \                     ??Init_Serial_UCA0_0:
   \   000002   3F90C000     CMP.W   #0xc0, R15
   \   000006   042C         JC      ??Init_Serial_UCA0_2
     56          		IOT_Rx[i] = ZERO;
   \   000008   CF43....     MOV.B   #0x0, IOT_Rx(R15)
     57          	}
   \   00000C   1F53         ADD.W   #0x1, R15
   \   00000E   F93F         JMP     ??Init_Serial_UCA0_0
     58          	for(unsigned int i=ZERO; i<THIRTY_TWO; i++){
   \                     ??Init_Serial_UCA0_2:
   \   000010   0F43         MOV.W   #0x0, R15
   \                     ??Init_Serial_UCA0_1:
   \   000012   3F901A00     CMP.W   #0x1a, R15
   \   000016   042C         JC      ??Init_Serial_UCA0_3
     59          		IOT_Tx[i] = ZERO;
   \   000018   CF43....     MOV.B   #0x0, IOT_Tx(R15)
     60          	}
   \   00001C   1F53         ADD.W   #0x1, R15
   \   00001E   F93F         JMP     ??Init_Serial_UCA0_1
     61          	// Configure UART 0
     62          	UCA0CTLW0 = ZERO; // Use word register
   \                     ??Init_Serial_UCA0_3:
   \   000020   82430005     MOV.W   #0x0, &0x500
     63          	UCA0CTLW0 |= UCSWRST; // Set Software reset enable
   \   000024   92D30005     BIS.W   #0x1, &0x500
     64          	UCA0CTLW0 |= UCSSEL__SMCLK; // Set SMCLK as fBRCLK
   \   000028   B2D080000005 BIS.W   #0x80, &0x500
     65          
     66          	UCA0BRW = FOUR;
   \   00002E   A2420605     MOV.W   #0x4, &0x506
     67          	UCA0MCTLW = BAUD_115_VALUE;
   \   000032   B24051550805 MOV.W   #0x5551, &0x508
     68          	UCA0CTLW0 &= ~ UCSWRST;             // Set Software reset enable
   \   000038   92C30005     BIC.W   #0x1, &0x500
     69            UCA0IE |= UCRXIE;
   \   00003C   92D31A05     BIS.W   #0x1, &0x51a
     70          }
   \   000040   1001         RETA
   \   000042                REQUIRE _A_UCA0CTLW0_L
   \   000042                REQUIRE _A_UCA0BRW_L
   \   000042                REQUIRE _A_UCA0MCTLW_L
   \   000042                REQUIRE _A_UCA0IE_L
     71          

   \                                 In  segment CODE, align 2
     72          void Init_Serial_UCA1(void){
   \                     Init_Serial_UCA1:
     73          	for(unsigned int i=ZERO; i<THIRTY_TWO; i++){
   \   000000   0F43         MOV.W   #0x0, R15
   \                     ??Init_Serial_UCA1_0:
   \   000002   3F901A00     CMP.W   #0x1a, R15
   \   000006   062C         JC      ??Init_Serial_UCA1_1
     74          		USB_Rx[i] = ZERO; // USB Rx Buffer
   \   000008   CF43....     MOV.B   #0x0, USB_Rx(R15)
     75          		USB_Tx[i] = ZERO;
   \   00000C   CF43....     MOV.B   #0x0, USB_Tx(R15)
     76          	}
   \   000010   1F53         ADD.W   #0x1, R15
   \   000012   F73F         JMP     ??Init_Serial_UCA1_0
     77          	// Configure UART 0
     78          	UCA1CTLW0 = ZERO; // Use word register
   \                     ??Init_Serial_UCA1_1:
   \   000014   82438005     MOV.W   #0x0, &0x580
     79          	UCA1CTLW0 |= UCSWRST; // Set Software reset enable
   \   000018   92D38005     BIS.W   #0x1, &0x580
     80          	UCA1CTLW0 |= UCSSEL__SMCLK; // Set SMCLK as fBRCLK
   \   00001C   B2D080008005 BIS.W   #0x80, &0x580
     81          
     82          	UCA1BRW = FOUR;
   \   000022   A2428605     MOV.W   #0x4, &0x586
     83          	UCA1MCTLW = BAUD_115_VALUE;
   \   000026   B24051558805 MOV.W   #0x5551, &0x588
     84          	UCA1CTLW0 &= ~ UCSWRST;             // Set Software reset enable
   \   00002C   92C38005     BIC.W   #0x1, &0x580
     85            UCA1IE |= UCRXIE;
   \   000030   92D39A05     BIS.W   #0x1, &0x59a
     86          }
   \   000034   1001         RETA
   \   000036                REQUIRE _A_UCA1CTLW0_L
   \   000036                REQUIRE _A_UCA1BRW_L
   \   000036                REQUIRE _A_UCA1MCTLW_L
   \   000036                REQUIRE _A_UCA1IE_L

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for IOT_Rx_rdy>`:
   \   000000   4C           DC8 76

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for IOT_Tx_rdy>`:
   \   000000   4C           DC8 76

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for SSID_rdy>`:
   \   000000   4C           DC8 76

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for IP_ADDR_rdy>`:
   \   000000   4C           DC8 76

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for command_rdy>`:
   \   000000   4C           DC8 76

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for diss_event_rdy>`:
   \   000000   4C           DC8 76

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for AT_sent>`:
   \   000000   4C           DC8 76

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for WSYN_sent>`:
   \   000000   4C           DC8 76

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for PING_sent>`:
   \   000000   4C           DC8 76

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for NSTC_sent>`:
   \   000000   4C           DC8 76

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for NSTAT_sent>`:
   \   000000   4C           DC8 76

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for USB_Rx_rdy>`:
   \   000000   4C           DC8 76

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for USB_Tx_rdy>`:
   \   000000   4C           DC8 76

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Init_Serial
        4   -> Init_Serial_UCA0
        0   -> Init_Serial_UCA1
      4   Init_Serial_UCA0
      4   Init_Serial_UCA1


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       1  ?<Initializer for AT_sent>
       1  ?<Initializer for IOT_Rx_rdy>
       1  ?<Initializer for IOT_Tx_rdy>
       1  ?<Initializer for IP_ADDR_rdy>
       1  ?<Initializer for NSTAT_sent>
       1  ?<Initializer for NSTC_sent>
       1  ?<Initializer for PING_sent>
       1  ?<Initializer for SSID_rdy>
       1  ?<Initializer for USB_Rx_rdy>
       1  ?<Initializer for USB_Tx_rdy>
       1  ?<Initializer for WSYN_sent>
       1  ?<Initializer for command_rdy>
       1  ?<Initializer for diss_event_rdy>
       1  AT_sent
     192  IOT_Rx
       2  IOT_Rx_index
       1  IOT_Rx_rdy
      26  IOT_Tx
       2  IOT_Tx_index
       1  IOT_Tx_rdy
       2  IOT_baud_rate
       2  IP_ADDR_index
       1  IP_ADDR_rdy
      14  IP_addr
       8  Init_Serial
      66  Init_Serial_UCA0
      54  Init_Serial_UCA1
       1  NSTAT_sent
       1  NSTC_sent
       1  PING_sent
       2  SSID_index
       1  SSID_rdy
      10  SSid
      26  USB_Rx
       2  USB_Rx_index
       1  USB_Rx_rdy
      26  USB_Tx
       2  USB_Tx_index
       1  USB_Tx_rdy
       2  USB_baud_rate
       1  WSYN_sent
       2  _A_UCA0BRW_L
       2  _A_UCA0CTLW0_L
       2  _A_UCA0IE_L
       2  _A_UCA0MCTLW_L
       2  _A_UCA1BRW_L
       2  _A_UCA1CTLW0_L
       2  _A_UCA1IE_L
       2  _A_UCA1MCTLW_L
      26  command
       2  command_index
       1  command_rdy
      14  diss_event
       1  diss_event_rdy
       2  diss_index

 
 128 bytes in segment CODE
  16 bytes in segment DATA16_AN
  13 bytes in segment DATA16_I
  13 bytes in segment DATA16_ID
 354 bytes in segment DATA16_Z
 
 128 bytes of CODE  memory
  13 bytes of CONST memory
 367 bytes of DATA  memory (+ 16 bytes shared)

Errors: none
Warnings: none
